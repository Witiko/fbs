(/ Common code)(js)
  /* The callback is invoked only when
     we've switched to a new user. */
  $s.newChild = ($i, callback) => {
    var user = getCurrName();
    if (user) {
      if ("children" in $i) {
        if ($i.children.indexOf(user) === -1) {
          $i.children.push(user);
          callback(user);
        }
      } else {
        $i.children = [ user ];
        callback(user);
      }
    }
  };
(js)

(/ Resending messages)(js)
  $s.newChild($i, (user) => log("Receive messages from this window using (:resender-" + user + ")."))
(js)(switched)(repeat)(;)
(changed)(@^^resender-```getCurrName()```^^
  getLastReplyName() + ": " + getLastReply()
^^)(repeat)(;)

(/ Sending messages via events)```
  if ($i.child)
    // Per-user process
    "(lock)(:send-" + strong("getCurrName()") + ")" +
      weak("eventData") + "(repeat)";
  else {
    // Global dispatcher process
    $s.newChild($i, (user) => {
      log('Send messages to this window using (^^send-' + user + '^^"MESSAGE"^^).');
      clone({ child: true });
    }); "(unlock)";
  }
```(switched)(repeat)(;)

(/ Executing batches via events)```
  if ($i.eventData)
    // Per-batch process
    "(lock)" + $i.eventData + "(never)";
  else if ($i.child)
    // Per-user process
    "(lock)(:exec-" + strong("getCurrName()") + ")" +
      js(
        "if(settings.debug.resender)" +
          "log('Executing a batch', eventData);" +
        "clone({ eventData: eventData });"
      ) + "(repeat)";
  else {
    // Global dispatcher process
    $s.newChild($i, (user) => { 
      log('Execute batches in this window using (^^exec-' + user + '^^"BATCH"^^).');
      clone({ child: true });
    }); "(unlock)";
  }
```(switched)(repeat)